
subdir_y_obj = $(addsuffix /$(BUILDIN_OBJ),$(subdir_y))
subdir_y_clean := $(addprefix _clean_, $(subdir_y))
subdir_m_clean := $(addprefix _clean_, $(subdir_m))

src_y = ${obj_y:%.o=%.c}


.PHONY: all $(subdir_y) $(subdir_m)
all:prepare $(subdir_m) $(BUILDIN_OBJ) $(TARGET)

ifeq ($(strip $(src_y)),)
prepare:

prepare_clean:
	
else
prepare:
	$(Q)$(CC) -MM $(BUILD_CFLAGS) $(src_y)  > .depend

prepare_clean:
	$(Q)$(RM) -fr .depend
endif
	
-include .depend

# $(MAKE) $(JN) -C $@ || exit 1 ;
$(subdir_y_obj):$(subdir_y)
	
$(subdir_y):
	$(Q)$(MAKE)  -C $@ || exit 1 ;

$(subdir_m):
	$(Q)$(MAKE)  -C $@ || exit 1 ;
		
$(BUILDIN_OBJ):$(obj_y) $(subdir_y_obj)
	$(LD) -r $(LINK_FLAGS) -o $@ $^

$(TARGET):$(BUILDIN_OBJ)
	$(Q)$(CC) $(LINK_FLAGS) $^  -o $@
	@echo "Compile    " $^  -o $@
		
.c.o:
	$(Q)$(CC) $(BUILD_CFLAGS) -c $<
	@echo "Compile    " $<

clean: prepare_clean $(subdir_y_clean) $(subdir_m_clean)
	$(RM) -fr $(BUILDIN_OBJ) $(obj_y) $(TARGET)

$(subdir_y_clean):
	$(Q)$(MAKE) -C $(patsubst _clean_%,%,$@) clean || exit 1 ;

$(subdir_m_clean):
	$(Q)$(MAKE) -C $(patsubst _clean_%,%,$@) clean || exit 1 ;
	
